<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios | 安迪的博客]]></title>
  <link href="http://renhai.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://renhai.github.io/"/>
  <updated>2014-06-26T19:33:17+08:00</updated>
  <id>http://renhai.github.io/</id>
  <author>
    <name><![CDATA[安迪]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS开发中一些常用的宏定义]]></title>
    <link href="http://renhai.github.io/blog/2014/06/26/ios-common-macro/"/>
    <updated>2014-06-26T17:51:36+08:00</updated>
    <id>http://renhai.github.io/blog/2014/06/26/ios-common-macro</id>
    <content type="html"><![CDATA[<h4>iOS开发中巧妙的运用宏定义不仅可以提高开发效率还可以减少代码量，以下是我在开发过程中经常用到的一些宏定义，今后还会继续扩充。<!--more--></h4>

<hr />

<p>```
//&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-打印日志&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;
//DEBUG  模式下打印日志,当前行</p>

<h1>ifdef DEBUG</h1>

<h1>define DLog(fmt, &hellip;) NSLog((@&ldquo;%s [Line %d] &rdquo; fmt), <strong>PRETTY_FUNCTION</strong>, <strong>LINE</strong>, ##<strong>VA_ARGS</strong>);</h1>

<h1>else</h1>

<h1>define DLog(&hellip;)</h1>

<h1>endif</h1>

<p>//重写NSLog,Debug模式下打印日志和当前行数</p>

<h1>if DEBUG</h1>

<h1>define NSLog(FORMAT, &hellip;) fprintf(stderr,&ldquo;\nfunction:%s line:%d content:%s\n&rdquo;, <strong>FUNCTION</strong>, <strong>LINE</strong>, [[NSString stringWithFormat:FORMAT, ##<strong>VA_ARGS</strong>] UTF8String]);</h1>

<h1>else</h1>

<h1>define NSLog(FORMAT, &hellip;) nil</h1>

<h1>endif</h1>

<p>//DEBUG  模式下打印日志,当前行 并弹出一个警告</p>

<h1>ifdef DEBUG</h1>

<h1>define ULog(fmt, &hellip;)  { UIAlertView *alert = [[UIAlertView alloc] initWithTitle:[NSString stringWithFormat:@&ldquo;%s\n [Line %d] &rdquo;, <strong>PRETTY_FUNCTION</strong>, <strong>LINE</strong>] message:[NSString stringWithFormat:fmt, ##<strong>VA_ARGS</strong>]  delegate:nil cancelButtonTitle:@&ldquo;Ok&rdquo; otherButtonTitles:nil]; [alert show]; }</h1>

<h1>else</h1>

<h1>define ULog(&hellip;)</h1>

<h1>endif</h1>

<p>//&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;Simulator/Device
//区分模拟器和真机</p>

<h1>if TARGET_OS_IPHONE</h1>

<p>//iPhone Device</p>

<h1>endif</h1>

<h1>if TARGET_IPHONE_SIMULATOR</h1>

<p>//iPhone Simulator</p>

<h1>endif</h1>

<p>//&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;ARC/no RAC
//ARC</p>

<h1>if __has_feature(objc_arc)</h1>

<p>//compiling with ARC</p>

<h1>else</h1>

<p>// compiling without ARC</p>

<h1>endif</h1>

<p>//Block
typedef void(^VoidBlock)();
typedef BOOL(^BoolBlock)();
typedef int (^IntBlock) ();
typedef id  (^IDBlock)  ();</p>

<p>typedef void(^VoidBlock_int)(int);
typedef BOOL(^BoolBlock_int)(int);
typedef int (^IntBlock_int) (int);
typedef id  (^IDBlock_int)  (int);</p>

<p>typedef void(^VoidBlock_string)(NSString<em>);
typedef BOOL(^BoolBlock_string)(NSString</em>);
typedef int (^IntBlock_string) (NSString<em>);
typedef id  (^IDBlock_string)  (NSString</em>);</p>

<p>typedef void(^VoidBlock_id)(id);
typedef BOOL(^BoolBlock_id)(id);
typedef int (^IntBlock_id) (id);
typedef id  (^IDBlock_id)  (id);</p>

<p>//System</p>

<h1>define PasteString(string)   [[UIPasteboard generalPasteboard] setString:string];</h1>

<h1>define PasteImage(image)     [[UIPasteboard generalPasteboard] setImage:image];</h1>

<p>//Image
//可拉伸的图片</p>

<h1>define ResizableImage(name,top,left,bottom,right) [[UIImage imageNamed:name] resizableImageWithCapInsets:UIEdgeInsetsMake(top,left,bottom,right)]</h1>

<h1>define ResizableImageWithMode(name,top,left,bottom,right,mode) [[UIImage imageNamed:name] resizableImageWithCapInsets:UIEdgeInsetsMake(top,left,bottom,right) resizingMode:mode]</h1>

<p>//file
//读取文件的文本内容,默认编码为UTF-8</p>

<h1>define FileString(name,ext)            [[NSString alloc] initWithContentsOfFile:[[NSBundle mainBundle] pathForResource:(name) ofType:(ext)] encoding:NSUTF8StringEncoding error:nil]</h1>

<h1>define FileDictionary(name,ext)        [[NSDictionary alloc] initWithContentsOfFile:[[NSBundle mainBundle] pathForResource:(name) ofType:(ext)]]</h1>

<h1>define FileArray(name,ext)             [[NSArray alloc] initWithContentsOfFile:[[NSBundle mainBundle] pathForResource:(name) ofType:(ext)]]</h1>

<p>//数学</p>

<h1>define PI 3.14159</h1>

<p>//输出frame(frame是结构体，没法%@)</p>

<h1>define LOGFRAME(f) NSLog(@&ldquo;\nx:%f\ny:%f\nwidth:%f\nheight:%f\n&rdquo;,f.origin.x,f.origin.y,f.size.width,f.size.height)</h1>

<h1>define LOGBOOL(b)  NSLog(@&ldquo;%@&rdquo;,b?@&ldquo;YES&rdquo;:@&ldquo;NO&rdquo;);</h1>

<p>//弹出信息</p>

<h1>define ALERT(msg) [[[UIAlertView alloc] initWithTitle:nil message:msg delegate:nil cancelButtonTitle:@&ldquo;ok&rdquo; otherButtonTitles:nil] show]</h1>

<p>//App</p>

<h1>define kApp ((AppDelegate *)[UIApplication sharedApplication].delegate)</h1>

<h1>define kNav ((AppDelegate *)[UIApplication sharedApplication].delegate.navigationController)</h1>

<p>//color</p>

<h1>define RGB(r, g, b)             [UIColor colorWithRed:(&reg; / 255.0) green:((g) / 255.0) blue:((b) / 255.0) alpha:1.0]</h1>

<h1>define RGBAlpha(r, g, b, a)     [UIColor colorWithRed:(&reg; / 255.0) green:((g) / 255.0) blue:((b) / 255.0) alpha:(a)]</h1>

<h1>define HexRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue &amp; 0xFF0000) >> 16))/255.0 green:((float)((rgbValue &amp; 0xFF00) >> 8))/255.0 blue:((float)(rgbValue &amp; 0xFF))/255.0 alpha:1.0]</h1>

<h1>define HexRGBAlpha(rgbValue,a) [UIColor colorWithRed:((float)((rgbValue &amp; 0xFF0000) >> 16))/255.0 green:((float)((rgbValue &amp; 0xFF00) >> 8))/255.0 blue:((float)(rgbValue &amp; 0xFF))/255.0 alpha:(a)]</h1>

<p>//转换</p>

<h1>define I2S(number) [NSString stringWithFormat:@&ldquo;%d&rdquo;,number]</h1>

<h1>define F2S(number) [NSString stringWithFormat:@&ldquo;%f&rdquo;,number]</h1>

<h1>define DATE(stamp) [NSDate dateWithTimeIntervalSince1970:[stamp intValue]];</h1>

<p>//设备屏幕尺寸</p>

<h1>define kScreen_Height   ([UIScreen mainScreen].bounds.size.height)</h1>

<h1>define kScreen_Width    ([UIScreen mainScreen].bounds.size.width)</h1>

<h1>define kScreen_Frame    (CGRectMake(0, 0 ,kScreen_Width,kScreen_Height))</h1>

<h1>define kScreen_CenterX  kScreen_Width/2</h1>

<h1>define kScreen_CenterY  kScreen_Height/2</h1>

<p>//应用尺寸(不包括状态栏,通话时状态栏高度不是20，所以需要知道具体尺寸)</p>

<h1>define kContent_Height   ([UIScreen mainScreen].applicationFrame.size.height)</h1>

<h1>define kContent_Width    ([UIScreen mainScreen].applicationFrame.size.width)</h1>

<h1>define kContent_Frame    (CGRectMake(0, 0 ,kContent_Width,kContent_Height))</h1>

<h1>define kContent_CenterX  kContent_Width/2</h1>

<h1>define kContent_CenterY  kContent_Height/2</h1>

<p>/*
类似九宫格的九个点</p>

<p> p1 &mdash;&ndash; p2 &mdash;&ndash; p3
 |      |      |
 p4 &mdash;&ndash; p5 &mdash;&ndash; p6
 |      |      |
 p7 &mdash;&ndash; p8 &mdash;&ndash; p9</p>

<p>*/</p>

<h1>define kP1 CGPointMake(0                 ,0)</h1>

<h1>define kP2 CGPointMake(kContent_Width/2  ,0)</h1>

<h1>define kP3 CGPointMake(kContent_Width    ,0)</h1>

<h1>define kP4 CGPointMake(0                 ,kContent_Height/2)</h1>

<h1>define kP5 CGPointMake(kContent_Width/2  ,kContent_Height/2)</h1>

<h1>define kP6 CGPointMake(kContent_Width    ,kContent_Height/2)</h1>

<h1>define kP7 CGPointMake(0                 ,kContent_Height)</h1>

<h1>define kP8 CGPointMake(kContent_Width/2  ,kContent_Height)</h1>

<h1>define kP9 CGPointMake(kContent_Width    ,kContent_Height)</h1>

<p>//*********************************************</p>

<p>//GCD</p>

<h1>define BACK(block) dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), block)</h1>

<h1>define MAIN(block) dispatch_async(dispatch_get_main_queue(),block)</h1>

<p>//Device</p>

<h1>define isIOS4 ([[[UIDevice currentDevice] systemVersion] intValue]==4)</h1>

<h1>define isIOS5 ([[[UIDevice currentDevice] systemVersion] intValue]==5)</h1>

<h1>define isIOS6 ([[[UIDevice currentDevice] systemVersion] intValue]==6)</h1>

<h1>define isIOS7 ([[[UIDevice currentDevice] systemVersion] intValue]==7)</h1>

<h1>define isAfterIOS4 ([[[UIDevice currentDevice] systemVersion] intValue]>4)</h1>

<h1>define isAfterIOS5 ([[[UIDevice currentDevice] systemVersion] intValue]>5)</h1>

<h1>define isAfterIOS6 ([[[UIDevice currentDevice] systemVersion] intValue]>6)</h1>

<h1>define isAfterIOS7 ([[[UIDevice currentDevice] systemVersion] intValue]>7)</h1>

<h1>define iOS ([[[UIDevice currentDevice] systemVersion] floatValue])</h1>

<h1>define isRetina ([[UIScreen mainScreen] scale]==2)</h1>

<h1>define iPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)</h1>

<h1>define isPad (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)</h1>

<p>//拨打电话</p>

<h1>define canTel                 ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:@&ldquo;tel:&rdquo;]])</h1>

<h1>define tel(phoneNumber)       ([[UIApplication sharedApplication] openURL:[NSURL URLWithString:[NSString stringWithFormat:@&ldquo;tel:%@&rdquo;,phoneNumber]]])</h1>

<h1>define telprompt(phoneNumber) ([[UIApplication sharedApplication] openURL:[NSURL URLWithString:[NSString stringWithFormat:@&ldquo;telprompt:%@&rdquo;,phoneNumber]]])</h1>

<p>//打开URL</p>

<h1>define canOpenURL(appScheme) ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:appScheme]])</h1>

<h1>define openURL(appScheme) ([[UIApplication sharedApplication] openURL:[NSURL URLWithString:appScheme]])</h1>

<p>///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////</p>

<h1>define RGBCOLOR(r,g,b) [UIColor colorWithRed:&reg;/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:1]</h1>

<h1>define RGBACOLOR(r,g,b,a) [UIColor colorWithRed:&reg;/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:(a)]</h1>

<h1>define CLEARCOLOR [UIColor clearColor]</h1>

<h1>define MAIN_COLOR [UIColor colorWithRed:33.0/255.0 green:185.0/255.0 blue:162.0/255.0 alpha:1.0]</h1>

<h1>define SCREEN_WIDTH ([[UIScreen mainScreen]bounds].size.width)</h1>

<h1>define SCREEN_HEIGHT ([[UIScreen mainScreen]bounds].size.height)</h1>

<p>/<em>
 * iPhone statusbar 高度
 </em>/</p>

<h1>define STATUSBAR_HEIGHT 20</h1>

<p>/<em>
 * iPhone 默认导航条高度
 </em>/</p>

<h1>define NAVIGATIONBAR_HEIGHT 44.0f</h1>

<h1>define NAVIGATIONBAR_IOS7_HEIGHT 64.0f</h1>

<p>// tabBar高度</p>

<h1>define TABBAR_HEIGHT 49.0f</h1>

<h1>define ENGISH_KEYBOARD_HEIGHT 216.0</h1>

<h1>define LINE_HEIGHT (isRetina ? 0.5 : 1.0)</h1>

<p>//检查系统版本</p>

<h1>define SYSTEM_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)</h1>

<h1>define SYSTEM_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)</h1>

<h1>define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)</h1>

<h1>define SYSTEM_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)</h1>

<h1>define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)</h1>

<p>//&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;图片&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<p>//读取本地图片</p>

<h1>define IMAGE_WITH_TYPE(file,ext) [UIImage imageWithContentsOfFile:[[NSBundle mainBundle]pathForResource:file ofType:ext]]</h1>

<p>//定义UIImage对象</p>

<h1>define IMAGE(A) [UIImage imageWithContentsOfFile:[[NSBundle mainBundle] pathForResource:A ofType:nil]]</h1>

<p>//&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;图片&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 和 iOS 开发资源汇总]]></title>
    <link href="http://renhai.github.io/blog/2014/06/26/ios-resources/"/>
    <updated>2014-06-26T13:51:48+08:00</updated>
    <id>http://renhai.github.io/blog/2014/06/26/ios-resources</id>
    <content type="html"><![CDATA[<h3>中文资源</h3>

<hr />

<p><a href="http://blog.devtang.com">唐巧的技术博客</a></p>

<p><a href="http://beyondvincent.com">破船之家</a></p>

<p><a href="http://www.imallen.com">I&rsquo;m Allen</a></p>

<p><a href="http://lianxu.me/">http://lianxu.me/</a></p>

<!--more-->


<h3>国外资源</h3>

<hr />

<p><a href="http://www.objc.io">Objc.io</a> 讨论 ObjC 的高级实现和深入技巧</p>

<p><a href="http://iosdevweekly.com">http://iosdevweekly.com</a> 杂志式的每周订阅的 iOS 开发咨询</p>

<p><a href="http://www.raywenderlich.com">Ray Wenderlich的博客</a> 有一些易于学习的教程</p>

<p><a href="http://www.mattgemmell.com">Matt Gemmell的博客</a> Matt对Objective-C 开发拥有丰富的经验和观点，这些观点非常值得我们去关注</p>

<h3>其他资源</h3>

<hr />

<p><a href="http://www.cnblogs.com/yingkong1987/archive/2013/07/24/3209777.html">http://www.cnblogs.com/yingkong1987/archive/2013/07/24/3209777.html</a></p>

<p><a href="http://rrurl.cn/2nl6sB">http://rrurl.cn/2nl6sB</a></p>

<p><a href="http://blog.csdn.net/zhibudefeng/article/details/8822597">http://blog.csdn.net/zhibudefeng/article/details/8822597</a></p>
]]></content>
  </entry>
  
</feed>
